---
const achievements = [
  {
    title: "Scholarship (2024): Tanoto Foundation Scholarship Awardee",
    description: "Merit-based scholarship awarded by Tanoto Foundation for academic excellence and leadership potential",
    driveLink: "https://drive.google.com/drive/folders/1jiWGZczp1k5hjv6pjmu-Z7o5hpMWf0CV?usp=sharing"
  },
  {
    title: "Find IT (2025) - Finalist",
    description: "Competitive programming and problem-solving challenge",
    driveLink: "https://drive.google.com/drive/folders/1jiWGZczp1k5hjv6pjmu-Z7o5hpMWf0CV?usp=sharing"
  },

  {
    title: "Datathon (2024) - 2nd Place",
    description: "AI model development for fraud detection and search engine innovations by Ristek UI",
    driveLink: "https://drive.google.com/drive/folders/1jiWGZczp1k5hjv6pjmu-Z7o5hpMWf0CV?usp=sharing"
  },
  {
    title: "Compfest (2024) - Finalist",
    description: "Data Analysis Competition with Tableau dashboard creation",
    driveLink: "https://drive.google.com/drive/folders/1jiWGZczp1k5hjv6pjmu-Z7o5hpMWf0CV?usp=sharing"
  },
    {
    title: "Data Royale (2023) - 2nd Place",
    description: "Data Science Competition by Kotak Riset SC, focusing on data wrangling, exploratory data analysis, and modeling",
    driveLink: "https://drive.google.com/file/d/1O2VB5o02iGMLDNhDix4LgmBmSS_Qecju/view?usp=sharing"
  },
];

const images = [
  "/dataroyale.jpg",
  "/datathon1.JPG",
  "/datathon2.jpg",
  "/hc (3).jpg",
  "/findit.jpeg"
];
---

<div class="flex flex-col lg:flex-row bg-fifth mx-4 sm:mx-6 lg:ml-10 lg:mr-40 my-10 rounded-4xl p-4 sm:p-6 lg:p-8 border-2 shadow-sm relative">
    <div class="w-full lg:w-3/5 lg:pr-8 mb-6 lg:mb-0">
        <h2 class="text-2xl sm:text-3xl font-bold mb-4 font-itim text-white">My Achievements</h2>
        
        <div class="space-y-1">
            {achievements.map((achievement) => (
                <div class="text-white">
                    <div class="flex items-start">
                        <div class="flex-1">
                            <d class="font-lusitana text-lg sm:text-xl block font-bold leading-tight">{achievement.title}</d>
                            <d class="font-lusitana block text-white text-xs sm:text-sm mt-0.5 leading-tight mb-0">{achievement.description}</d>
                            <a 
                                href={achievement.driveLink} 
                                class="inline-flex items-center text-yellow-300 hover:text-yellow-100 transition-colors duration-200 mb-4 text-xs sm:text-sm"
                            >
                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M6.5 2C4.567 2 3 3.567 3 5.5v13C3 20.433 4.567 22 6.5 22h11c1.933 0 3.5-1.567 3.5-3.5v-13C21 3.567 19.433 2 17.5 2h-11z"/>
                                </svg>
                                <span class="font-lusitana">Certificate</span>
                            </a>
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </div>
    
    <div class="relative lg:absolute lg:top-[15%] lg:right-0 lg:translate-x-30 w-full lg:w-2/5">
        <div class="bg-second rounded-2xl p-4 h-64 sm:h-80 lg:h-full shadow-sm-left">
            <div class="carousel-container relative overflow-hidden rounded-xl h-full">
                <div class="carousel-track flex transition-transform duration-500 ease-in-out h-full" id="carousel-track">
                    {images.map((image, index) => (
                        <img src={image} alt={`Competition ${index + 1}`} class="carousel-slide min-w-full h-48 sm:h-64 lg:h-72 object-cover" />
                    ))}
                </div>
                
                <div class="flex justify-center mt-3 space-x-1">
                    {images.map((_, index) => (
                        <button class="carousel-dot w-2 h-2 sm:w-3 sm:h-3 rounded-full bg-white bg-opacity-50 hover:bg-opacity-100 transition-all duration-200" data-slide={index}></button>
                    ))}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentSlide = 0;
    const slides = document.querySelectorAll('.carousel-slide');
    const dots = document.querySelectorAll('.carousel-dot');
    const track = document.getElementById('carousel-track');
    const totalSlides = slides.length;

    function updateCarousel() {
        if (track) {
            track.style.transform = `translateX(-${currentSlide * 100}%)`;
        }
        
        dots.forEach((dot, index) => {
            dot.classList.toggle('bg-opacity-100', index === currentSlide);
            dot.classList.toggle('bg-opacity-50', index !== currentSlide);
        });
    }

    function nextSlide() {
        currentSlide = (currentSlide + 1) % totalSlides;
        updateCarousel();
    }

    setInterval(nextSlide, 3000);

    dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
            currentSlide = index;
            updateCarousel();
        });
    });

    updateCarousel();
</script>